/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;
import controlador.DriverCampana;
import controlador.DriverPaciente;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import controlador.DriverCampanaPaciente;
import java.text.ParseException;


/**
 *
 * @author julian
 */
public class VentanaRegistroCampPaciente extends javax.swing.JFrame {

    private VentanaAdminMedico ventAdminMed;
    private DriverCampana driverCampana = new DriverCampana();
    private ArrayList<ArrayList<String>>campanas = driverCampana.listaCampanas();
    private DriverPaciente driverPaciente = new DriverPaciente();
    private ArrayList <String[]> pacientes = new ArrayList <>();
    private ArrayList <String[]> pacientesIn = new ArrayList <>();
    private DriverCampanaPaciente driverCampanaPaciente = new DriverCampanaPaciente();
    /**
     * Creates new form VentanaRegistroCampPaciente
     */
    public VentanaRegistroCampPaciente() throws SQLException {
        initComponents();
        
        
        
        int size1=campanas.size();
        for(int i=0;i<size1;i++){
            comboCampanas.addItem(campanas.get(i).get(1));
        }
        
        cargarPacientes(campanas.get(0).get(0));
    }
    
    public void cargarPacientes(String id_campana) throws SQLException{

        pacientes = driverPaciente.listarPacientes();
        pacientesIn = driverPaciente.listarPacientesIn(id_campana);
        
        int size = pacientes.size();
        
        for(int i=0;i<size;i++){
            for(int j=0;j<pacientesIn.size();j++){
                if(pacientesIn.get(j)[0].equals(pacientes.get(i)[0])){
                    pacientes.remove(i);
                    size--;
                }
            }
        }
        
        DefaultTableModel model1 = (DefaultTableModel) tablaPacienteDisp.getModel();
        int size1=pacientes.size();
                        
        while(model1.getRowCount()>0){model1.removeRow(0);}
        for(int j=0;j<size1;j++){
            model1.addRow(new Object[]{pacientes.get(j)[0], pacientes.get(j)[1] + " " + pacientes.get(j)[2] + " " + pacientes.get(j)[3]});
        }
        DefaultTableModel model2 = (DefaultTableModel) tablaPacienteAgregados.getModel();
        int size2=pacientesIn.size();
        while(model2.getRowCount()>0){model2.removeRow(0);}
        for(int j=0;j<size2;j++){
            model2.addRow(new Object[]{pacientesIn.get(j)[0], pacientesIn.get(j)[1] + " " + pacientesIn.get(j)[2] + " " + pacientesIn.get(j)[3]});
        }
    }
    
    public void accionAgregar () throws ParseException, SQLException{
        String id_paciente = pacientes.get(tablaPacienteDisp.getSelectedRow())[0];
        String id_campana = campanas.get(comboCampanas.getSelectedIndex()).get(0);
        
        driverCampanaPaciente.registrarCampanaPaciente(id_campana, id_paciente);
        cargarPacientes(campanas.get(comboCampanas.getSelectedIndex()).get(0));
    }
    
    public void accionEliminar () throws ParseException, SQLException{
        String id_paciente = pacientesIn.get(tablaPacienteAgregados.getSelectedRow())[0];
        String id_campana = campanas.get(comboCampanas.getSelectedIndex()).get(0);
        
        driverCampanaPaciente.eliminarCampanaPaciente(id_campana, id_paciente);
        cargarPacientes(campanas.get(comboCampanas.getSelectedIndex()).get(0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void acomodarVentana(VentanaAdminMedico ventAdminMed){
        
        this.ventAdminMed = ventAdminMed;
    
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboCampanas = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPacienteDisp = new javax.swing.JTable();
        btAgregarPaciente = new javax.swing.JButton();
        btEliminarPaciente = new javax.swing.JButton();
        btAtras = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPacienteAgregados = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        jLabel1.setText("Asigancion de Pacientes a campañas ");

        jLabel2.setText("Seleccione la Campaña");

        jLabel3.setText("Pacientes Disponibles");

        comboCampanas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCampanasActionPerformed(evt);
            }
        });
        comboCampanas.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboCampanasPropertyChange(evt);
            }
        });

        jLabel4.setText("Pacientes Agregados");

        tablaPacienteDisp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Numero Documento", "Nombre Completo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPacienteDisp);

        btAgregarPaciente.setText("Agregar");
        btAgregarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAgregarPacienteActionPerformed(evt);
            }
        });

        btEliminarPaciente.setText("Eliminar");
        btEliminarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarPacienteActionPerformed(evt);
            }
        });

        btAtras.setText("Atras");
        btAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAtrasMouseClicked(evt);
            }
        });

        tablaPacienteAgregados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Numero Documento", "Nombre Completo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaPacienteAgregados);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 600, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                                    .addComponent(comboCampanas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(14, 14, 14))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btAgregarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btEliminarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(264, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(41, 41, 41)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCampanas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(btAgregarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(btEliminarPaciente)
                .addGap(31, 31, 31)
                .addComponent(btAtras)
                .addGap(25, 25, 25))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(323, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(135, 135, 135)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAtrasMouseClicked
        
        ventAdminMed.setVisible(true);
        dispose();
    }//GEN-LAST:event_btAtrasMouseClicked

    private void comboCampanasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCampanasActionPerformed
        try {
            cargarPacientes(campanas.get(comboCampanas.getSelectedIndex()).get(0));
        } catch (SQLException ex) {
            Logger.getLogger(VentanaRegistroCampPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboCampanasActionPerformed

    private void btAgregarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAgregarPacienteActionPerformed
        try {
            accionAgregar();
        } catch (ParseException ex) {
            Logger.getLogger(VentanaRegistroCampPaciente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VentanaRegistroCampPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAgregarPacienteActionPerformed

    private void btEliminarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarPacienteActionPerformed
        try {
            accionEliminar();
        } catch (ParseException ex) {
            Logger.getLogger(VentanaRegistroCampPaciente.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(VentanaRegistroCampPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btEliminarPacienteActionPerformed

    private void comboCampanasPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboCampanasPropertyChange

    }//GEN-LAST:event_comboCampanasPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroCampPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroCampPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroCampPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroCampPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new VentanaRegistroCampPaciente().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(VentanaRegistroCampPaciente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAgregarPaciente;
    private javax.swing.JButton btAtras;
    private javax.swing.JButton btEliminarPaciente;
    private javax.swing.JComboBox comboCampanas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaPacienteAgregados;
    private javax.swing.JTable tablaPacienteDisp;
    // End of variables declaration//GEN-END:variables
}
